the first line of the command line script should always begin with #! /path / to / the interpreter

variable names should have have spaces ifront and at the end of the of = 
eg 
variable_name="some variable"
VARIABLE_NAME="some variable"

acces the value of the variable using $VARIABLE_NAME
or  you can also use ${VARIABLE_NAME} <- this method is suitable if there is data behind the 
variabe name 

the format of the if and the elif and the else statements is such that 
# ----------------------------------------------------------------
if [ conditional expression] 
then 
    commands 
elif [ conditional expression] 
then 
    commands 
else 
    commands 
fi 
# please give a space after writing if [ space expression ] otherwise it wont work properly
# ----------------------------------------------------------------

for VARIABLE_NAME_FOR_FOR_LOOP in ITEM_1 ITEM_2 ...... so on 
do 
    command 1 
    command 2
    command 3
done 

# ----------------------------------------------------------------

$1 $2 $3 $4 
above is how you use the input from the user 
for example is this case for VARIABLE_NAME_FOR_FOR_LOOP in ITEM_1 ITEM_2 ......
ITEM_1 is basically $1 
ITEM_2 is basically $2 

to get all the items from the command line 
you can use the 
$@ command 

# ------------------------------------------------------------------

a basic example of the command to compate is 
if [ "$VARIABLE_NAME" = "SOME_NAME" ] 
then 
    command 

# ------------------------------------------------------------------
#! bin/bash 
COLORS="RED GREEN YELLOW"
for COLOR in COLORS 
do 
    echo "COLOR : $COLOR" 
done 
# ------------------------------------------------------------------
#! bin/bash 
PICTURES=$(ls *jpg) 
DATE=$(date +%F)   #this adds the date infornt of the file name 
for DATED in DATE 
do 
    echo "DATE : $DATED" 
done 
# ------------------------------------------------------------------

to make a shell script executable 
chmod +x <fileName>

for example 
chmod +x ./someFileInTheSameDirectory.sh 

to execute the file use 
./someFileInTheSameDirectory.sh
# ------------------------------------------------------------------
to read the user input 
echo "please enter something here"
read something 
echo "that some tthing is $something "

# ----------------------------------------------------------------
commonly used file types checkin in the bash command line tools 
–f:  It returns True if the file exists as a common ( regular ) file.
-d: it returns True if directory exists.
-e: It returns True if any type of file exists.
-c: It returns True if the character file exists.
-r: It returns True if a readable file exists.
–w: It returns True if a writable file exists .
-x: It returns True if an executable file exists.
-p: It returns True if the file exists as a pipe.
-S: It returns True if the file exists as a socket.
-s: it returns True if a file exists and the size of the file is not zero.
-L: It returns True if the file of symbolic link exists .
-g: It returns True if the file exists and hold set group id flag is set..
-G: It returns True if the file exists and holds the same group id that is in process.
 -k: It returns True if the file exists and the sticky bit flag is set.
Now, there are some more parameters for comparison between the two files.

-ef: It returns True if both files exist and indicate the same file. 
#  ----------------------------------------------------------------



